{"version":3,"sources":["components/Question.js","components/QuestionDisplay.js","components/QuizForm.js","components/Quiz.js","App.js","index.js"],"names":["Question","state","id","_this","getId","question","img_src","correct_answer","other_answers1","other_answers2","other_answers3","error","e","this","setState","Object","defineProperty","target","name","value","uuidv4","message","_this2","setTimeout","allFieldsEmpty","setErrorMessage","other_answers","props","addQuestion","_this3","react_default","a","createElement","className","type","onChange","handleChange","bind","placeholder","role","onClick","updateQuestion","Component","QuestionDisplay","_ref","map","i","key","QuizForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","quiz","res","data","wrap","_context","prev","next","preventDefault","objectSpread","questions","filter","q","fetch","method","body","JSON","stringify","headers","Content-Type","sent","json","console","log","undefined","history","push","concat","stop","_x","apply","arguments","assertThisInitialized","newQuestion","handleQuestion","length","toConsumableArray","content","Fragment","components_QuestionDisplay","Question_Question","Quiz","match","params","o","React","createBrowserHistory","Home","components_QuizForm","App","react_router","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a73d479f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nexport default class Question extends Component {\r\n  state = {\r\n    id: this.getId(),\r\n    question: \"\",\r\n    img_src: \"\",\r\n    correct_answer: \"\",\r\n    other_answers1: \"\",\r\n    other_answers2: \"\",\r\n    other_answers3: \"\",\r\n    error: \"\"\r\n  };\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  getId() {\r\n    return uuidv4();\r\n  }\r\n\r\n  allFieldsEmpty() {\r\n    if (\r\n      this.state.question === \"\" &&\r\n      this.state.correct_answer === \"\" &&\r\n      this.state.other_answers1 === \"\" &&\r\n      this.state.other_answers2 === \"\" &&\r\n      this.state.other_answers3 === \"\"\r\n    )\r\n      return true;\r\n  }\r\n\r\n  setErrorMessage(message) {\r\n    this.setState({\r\n      error: message\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        error: \"\"\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  onClick(e) {\r\n    if (this.allFieldsEmpty()) {\r\n      this.setErrorMessage(\"Please fill in all fields\");\r\n    } else {\r\n      let question = {\r\n        id: this.state.id,\r\n        question: this.state.question,\r\n        correct_answer: this.state.correct_answer,\r\n        other_answers: [\r\n          this.state.other_answers1,\r\n          this.state.other_answers2,\r\n          this.state.other_answers3\r\n        ]\r\n      };\r\n      this.props.addQuestion(question);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form-group list-group-item\">\r\n        <div className=\"input-group input-group-sm mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text bg-info text-white\">\r\n              Question:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"question\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Question\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text bg-info text-white\">Image:</span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"img_src\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Image link (Optional)\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text bg-info text-white\">\r\n              Correct answer:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"correct_answer\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Correct answer\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-3 \">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text bg-info text-white\">\r\n              Other answers:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className=\"mr-2 form-control\"\r\n            type=\"text\"\r\n            name=\"other_answers1\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Other answer 1\"\r\n          />\r\n          <input\r\n            className=\"mr-2 form-control\"\r\n            type=\"text\"\r\n            name=\"other_answers2\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Other answer 2\"\r\n          />\r\n          <input\r\n            className=\"mr-2 form-control\"\r\n            type=\"text\"\r\n            name=\"other_answers3\"\r\n            onChange={this.handleChange.bind(this)}\r\n            placeholder=\"Other answer 3\"\r\n          />\r\n        </div>\r\n        <div>\r\n          {this.state.error && (\r\n            <div className=\"alert alert-warning\" role=\"alert\">\r\n              {this.state.error}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"btn-group d-flex justify-content-center\">\r\n          <button\r\n            className=\"btn btn-success btn-sm\"\r\n            onClick={this.onClick.bind(this)}\r\n          >\r\n            {\" \"}\r\n            Add question{\" \"}\r\n          </button>\r\n          {!this.allFieldsEmpty() && (\r\n            <button\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => this.props.updateQuestion(this.state)}\r\n            >\r\n              {\" \"}\r\n              Update question{\" \"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst QuestionDisplay = ({ question, correct_answer, other_answers }) => {\r\n  if (!other_answers) return null;\r\n  return (\r\n    <div>\r\n      <h3 className='text-center'>{question}</h3>\r\n      <ul>\r\n        <li>{correct_answer}</li>\r\n        {other_answers.map((a, i) => (\r\n          <li key={i + 99}>{a}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDisplay;\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport QuestionDisplay from './QuestionDisplay';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { history } from '../App';\r\nclass QuizForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      questions: [{ id: 777 }]\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.newQuestion = this.newQuestion.bind(this);\r\n    this.addQuestion = this.addQuestion.bind(this);\r\n    this.handleQuestion = this.handleQuestion.bind(this);\r\n    this.updateQuestion = this.updateQuestion.bind(this);\r\n  }\r\n\r\n  addQuestion(question) {\r\n    //id is in array\r\n    let isInArray = this.state.questions.filter(q => q.id === question.id);\r\n    if (isInArray.length === 0) {\r\n      this.setState({\r\n        questions: [...this.state.questions, question]\r\n      });\r\n    }\r\n  }\r\n\r\n  handleQuestion(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  newQuestion(e, question) {\r\n    e.preventDefault();\r\n    this.addQuestion(question);\r\n  }\r\n\r\n  updateQuestion(state) {\r\n    //find question by id\r\n    let newQuestion = { ...state };\r\n    this.setState({\r\n      questions: [\r\n        ...this.state.questions.filter(q => q.id !== state.id),\r\n        newQuestion\r\n      ]\r\n    });\r\n  }\r\n  getId() {\r\n    return uuidv4();\r\n  }\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n    let quiz = {\r\n      ...this.state,\r\n      questions: this.state.questions.filter(q => q.id !== 777)\r\n    };\r\n\r\n    const res = await fetch('/quiz', {\r\n      method: 'POST',\r\n      body: JSON.stringify(quiz),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    console.log('data:', data);\r\n\r\n    if (data !== undefined) {\r\n      console.log('data:', data);\r\n      history.push(`/quiz/${data}`);\r\n    }\r\n  };\r\n  render() {\r\n    let content = this.state.questions.map((q, i) => (\r\n      <React.Fragment key={i}>\r\n        <QuestionDisplay {...q} />\r\n        <Question\r\n          handleQuestion={this.handleQuestion}\r\n          key={q.id}\r\n          updateQuestion={this.updateQuestion}\r\n          addQuestion={this.addQuestion}\r\n        />\r\n      </React.Fragment>\r\n    ));\r\n    return (\r\n      <div>\r\n        <div className='input-group input-group-lg mb-3'>\r\n          <div className='input-group-prepend'>\r\n            <span className='input-group-text bg-info text-white'>\r\n              Quiz Name:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className='form-control'\r\n            name='name'\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            type='text'\r\n            placeholder='Name your quiz'\r\n          />\r\n        </div>\r\n\r\n        <div>{content}</div>\r\n        <input\r\n          className='btn btn-primary btn-block'\r\n          type='submit'\r\n          value='Create Quiz'\r\n          onClick={this.onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizForm;\r\n","import React from 'react';\r\n//({ name, questions })\r\nclass Quiz extends React.Component {\r\n  state = {\r\n    name: '',\r\n    questions: []\r\n  };\r\n  async componentDidMount() {\r\n    let res = await fetch(`/getquiz/${this.props.match.params.id}`);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    this.setState({\r\n      name: data.name,\r\n      questions: data.questions\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='containerx'>\r\n        <h1 className='text-center'>{this.state.name}</h1>\r\n        {this.state.questions.length > 0 &&\r\n          this.state.questions.map(q => (\r\n            <div>\r\n              <h4>{q.question}</h4>\r\n              <ul>\r\n                <li>{q.correct_answer}</li>\r\n                {q.other_answers.map(o => (\r\n                  <li>{o}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\nimport QuizForm from './components/QuizForm';\nimport Quiz from './components/Quiz';\nimport { Route, Switch } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\nfunction Home() {\n  return (\n    <div className='text-center container '>\n      <h1 className='text-center'>Welcome to QuizBuilder</h1>\n      <h2 className='text-center'>\n        Build your own quiz and share with friends\n      </h2>\n      <QuizForm />\n    </div>\n  );\n}\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <Router>\n//         <Switch>\n//           <Route path='/' exact component={Home} />\n//           <Route path='quiz/:id' component={Quiz} />\n//         </Switch>\n//       </Router>\n//     );\n//   }\n// }\n\nconst App = () => (\n  <Router history={history}>\n    <Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/quiz/:id' component={Quiz} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}