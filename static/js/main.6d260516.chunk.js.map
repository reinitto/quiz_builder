{"version":3,"sources":["actions/QuizActions.js","actions/types.js","components/QuestionPreview.js","components/QuestionBuilder.js","components/QuizForm.js","components/QuestionDisplay.js","actions/answerQuizActions.js","components/Quiz.js","reducers/quizReducer.js","reducers/answerQuizReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["addQuestion","type","payload","id","uuidv1","question","undefined","img_src","correct_answer","other_answers1","other_answers2","other_answers3","requiredFieldsEmpty","error","created","Date","QuestionPreview","data","_data$question","_data$correct_answer","_data$other_answers","_data$other_answers2","_data$other_answers3","index","_data$img_src","textClass","dataAttr","react_default","a","createElement","className","style","fontSize","concat","src","alt","QuestionBuilder","state","_this","props","handleChange","e","setState","Object","defineProperty","target","name","value","updateQuestion","this","message","_this2","setTimeout","_this3","onChange","placeholder","role","components_QuestionPreview","onClick","deleteQuestion","Component","connect","_ref","questions","quizBuilder","shuffle","require","knuthShuffle","QuizForm","onSubmit","_callee","quiz","regenerator_default","wrap","_context","prev","next","preventDefault","filter","q","length","setErrorMessage","map","randomOrderedAnswers","slice","answers","submitQuiz","sent","history","push","stop","content","i","Fragment","key","components_QuestionBuilder","assign","_ref2","_ref2$quizBuilder","asyncToGenerator","mark","dispatch","res","objectSpread","fetch","method","body","JSON","stringify","headers","Content-Type","json","abrupt","_x","apply","arguments","updateAnswer","answer","question_id","showCorrectAnswer","userAnswer","answerClassNames","innerHTML","Quiz","score","submitted","setQuiz","match","params","showAnswers","calculateScore","reduce","acc","components_QuestionDisplay","react","react_router_dom","to","disabled","React","_ref$answerQuiz","answerQuiz","initialState","combineReducers","action","qs","toConsumableArray","sort","b","Qs","withAnswers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","createBrowserHistory","Home","components_QuizForm","App","es","react_router","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gRA4BaA,EAAc,WACzB,MAAO,CACLC,KCvBwB,eDwBxBC,QAAS,CACPC,GAAIC,MACJC,cAAUC,EACVC,aAASD,EACTE,oBAAgBF,EAChBG,oBAAgBH,EAChBI,oBAAgBJ,EAChBK,oBAAgBL,EAChBM,qBAAqB,EACrBC,WAAOP,EACPQ,QAAS,IAAIC,QEsCJC,EA7ES,SAAAC,GAAQ,IAAAC,EAS1BD,EAPFZ,gBAF4B,IAAAa,EAEjB,mBAFiBA,EAAAC,EAS1BF,EANFT,sBAH4B,IAAAW,EAGX,yBAHWA,EAAAC,EAS1BH,EALFR,sBAJ4B,IAAAW,EAIX,yBAJWA,EAAAC,EAS1BJ,EAJFP,sBAL4B,IAAAW,EAKX,yBALWA,EAAAC,EAS1BL,EAHFN,sBAN4B,IAAAW,EAMX,yBANWA,EAO5BC,EAEEN,EAFFM,MAP4BC,EAS1BP,EADFV,eAR4B,IAAAiB,OAQlBlB,EARkBkB,EAWxBC,EAAY,SAAAC,GAChB,YAAuBpB,IAAnBW,EAAKS,IAA8C,KAAnBT,EAAKS,GAChC,cAEA,gBAIX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAEC,SAAU,SAA9C,IAAAC,OACOV,EAAQ,EADf,iBAGAI,EAAAC,EAAAC,cAAA,MAAIC,UAAWL,EAAU,aACT,KAAbpB,EAAkB,mBAAqBA,GAE1CsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZvB,EACCoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZ,IACDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYI,IAAK3B,EAAS4B,IAAI,UAAW,KAExD,KACJR,EAAAC,EAAAC,cAAA,MAAIC,UAAW,cAAgBvB,EAAU,QAAU,WACjDoB,EAAAC,EAAAC,cAAA,MACEC,UACEL,EAAU,kBACV,2CAIkB,KAAnBjB,EAAwB,yBAA2BA,GAEtDmB,EAAAC,EAAAC,cAAA,MACEC,UACEL,EAAU,kBACV,2CAIkB,KAAnBhB,EAAwB,yBAA2BA,GAEtDkB,EAAAC,EAAAC,cAAA,MACEC,UACEL,EAAU,kBACV,2CAIkB,KAAnBf,EAAwB,yBAA2BA,GAEtDiB,EAAAC,EAAAC,cAAA,MACEC,UACEL,EAAU,kBACV,2CAIkB,KAAnBd,EAAwB,yBAA2BA,OC9D1DyB,6MACJC,MAAQ,CACNlC,GAAImC,EAAKC,MAAMpC,GACfE,SAAUiC,EAAKC,MAAMlC,SACrBE,QAAS+B,EAAKC,MAAMhC,QACpBC,eAAgB8B,EAAKC,MAAM/B,eAC3BC,eAAgB6B,EAAKC,MAAM9B,eAC3BC,eAAgB4B,EAAKC,MAAM7B,eAC3BC,eAAgB2B,EAAKC,MAAM5B,eAC3BC,oBAAqB0B,EAAKC,MAAM3B,oBAChCW,MAAOe,EAAKC,MAAMhB,MAClBV,MAAOyB,EAAKC,MAAM1B,MAClBC,QAASwB,EAAKC,MAAMzB,WAGtB0B,aAAe,SAAAC,GACbH,EAAKI,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,OAAS,WACjDT,EAAKC,MAAMS,eAAeV,EAAKD,OAC3BC,EAAK1B,sBACP0B,EAAKI,SACH,CACE9B,qBAAqB,GAEvB,kBAAM0B,EAAKC,MAAMS,eAAeV,EAAKD,SAGvCC,EAAKI,SACH,CACE9B,qBAAqB,GAEvB,kBAAM0B,EAAKC,MAAMS,eAAeV,EAAKD,iGAO3C,YAC0B/B,IAAxB2C,KAAKZ,MAAMhC,UACa,KAAxB4C,KAAKZ,MAAMhC,eACmBC,IAA9B2C,KAAKZ,MAAM7B,gBACmB,KAA9ByC,KAAKZ,MAAM7B,qBACmBF,IAA9B2C,KAAKZ,MAAM5B,gBACmB,KAA9BwC,KAAKZ,MAAM5B,qBACmBH,IAA9B2C,KAAKZ,MAAM3B,gBACmB,KAA9BuC,KAAKZ,MAAM3B,qBACmBJ,IAA9B2C,KAAKZ,MAAM1B,gBACmB,KAA9BsC,KAAKZ,MAAM1B,uDAQCuC,GAAS,IAAAC,EAAAF,KACvBA,KAAKP,SAAS,CACZ7B,MAAOqC,IAETE,WAAW,WACTD,EAAKT,SAAS,CACZ7B,MAAO,QAER,sCAGI,IAAAwC,EAAAJ,KACP,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAhB,cAIFH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACV7B,KAAK,OACL6C,KAAK,WACLC,MAAOE,KAAKZ,MAAMhC,UAAY,GAC9BiD,SAAUL,KAAKT,aACfe,YAAY,cAIhB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAhB,eAIFH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACV7B,KAAK,OACL6C,KAAK,UACLQ,SAAUL,KAAKT,aACfO,MAAOE,KAAKZ,MAAM9B,SAAW,GAC7BgD,YAAY,2BAIhB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAhB,oBAIFH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACV7B,KAAK,OACL6C,KAAK,iBACLQ,SAAUL,KAAKT,aACfO,MAAOE,KAAKZ,MAAM7B,gBAAkB,GACpC+C,YAAY,oBAIhB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAhB,mBAIFH,EAAAC,EAAAC,cAAA,SACEC,UAAU,oBACV7B,KAAK,OACL6C,KAAK,iBACLQ,SAAUL,KAAKT,aACfO,MAAOE,KAAKZ,MAAM5B,gBAAkB,GACpC8C,YAAY,mBAEd5B,EAAAC,EAAAC,cAAA,SACEC,UAAU,oBACV7B,KAAK,OACL6C,KAAK,iBACLQ,SAAUL,KAAKT,aACfO,MAAOE,KAAKZ,MAAM3B,gBAAkB,GACpC6C,YAAY,mBAEd5B,EAAAC,EAAAC,cAAA,SACEC,UAAU,oBACV7B,KAAK,OACL6C,KAAK,iBACLQ,SAAUL,KAAKT,aACfO,MAAOE,KAAKZ,MAAM1B,gBAAkB,GACpC4C,YAAY,oBAGhB5B,EAAAC,EAAAC,cAAA,WACGoB,KAAKZ,MAAMxB,OACVc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB0B,KAAK,SACvCP,KAAKZ,MAAMxB,QAIlBc,EAAAC,EAAAC,cAAC4B,EAAoBR,KAAKZ,OAE1BV,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACV4B,QAAS,kBAAML,EAAKd,MAAMoB,eAAeN,EAAKd,MAAMpC,MAFtD,2BA7JsByD,aA0KfC,cAFS,SAAAC,GAAA,MAAqC,CAAEC,UAAvCD,EAAGE,YAAeD,YAIxC,CAAE/D,cAAagD,eHvIa,SAAA3C,GAC5B,MAAO,CACLJ,KC7C2B,kBD8C3BC,QAASG,IGoIoBsD,eHhIH,SAAAxD,GAC5B,MAAO,CACLF,KC/C2B,kBDgD3BC,QAASC,KG2HE0D,CAGbzB,GCjLE6B,EAAUC,EAAQ,IAAiBC,aAEjCC,6MACJ/B,MAAQ,CACNS,KAAM,MASRN,aAAe,SAAAC,GACbH,EAAKI,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,WAc5CsB,+CAAW,SAAAC,EAAM7B,GAAN,IAAAsB,EAAAQ,EAAApE,EAAA,OAAAqE,EAAA5C,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTnC,EAAEoC,mBAEevC,EAAKC,MAAMwB,UAAUe,OACpC,SAAAC,GAAC,OAA8B,IAA1BA,EAAEnE,sBAEMoE,OAAS,GANf,CAAAN,EAAAE,KAAA,QAOPtC,EAAK2C,gBAAgB,iCAPdP,EAAAE,KAAA,uBASHb,EAAYzB,EAAKC,MAAMwB,UAAUmB,IAAI,SAAAH,GACvC,IAAII,EAAuBlB,EACzB,CACEc,EAAEvE,eACFuE,EAAEtE,eACFsE,EAAErE,eACFqE,EAAEpE,gBACFyE,MAAM,IAEV,MAAO,CACL5E,eAAgBuE,EAAEvE,eAClBM,QAASiE,EAAEjE,QACXD,MAAOkE,EAAElE,MACTV,GAAI4E,EAAE5E,GACNI,QAASwE,EAAExE,QACXgB,MAAOwD,EAAExD,MACT8D,QAASF,EACT9E,SAAU0E,EAAE1E,YAGZkE,EAAO,CACTR,YACAjB,KAAMR,EAAKD,MAAMS,MA/BZ4B,EAAAE,KAAA,GAiCUtC,EAAKC,MAAM+C,WAAWf,GAjChC,QAiCDpE,EAjCCuE,EAAAa,KAkCPC,EAAQC,KAAR,SAAAxD,OAAsB9B,IAlCf,yBAAAuE,EAAAgB,SAAApB,+IAnB2B,IAAhCrB,KAAKV,MAAMwB,UAAUiB,QACvB/B,KAAKV,MAAMvC,sDAOCkD,GAAS,IAAAC,EAAAF,KACvBA,KAAKP,SAAS,CACZ7B,MAAOqC,IAETE,WAAW,WACTD,EAAKT,SAAS,CACZ7B,MAAO,QAER,sCAyCH,IAAI8E,EAAU1C,KAAKV,MAAMwB,UACrBd,KAAKV,MAAMwB,UAAUmB,IAAI,SAACH,EAAGa,GAAJ,OACvBjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,SAAP,CAAgBC,IAAKF,GACnBjE,EAAAC,EAAAC,cAACkE,EAADpD,OAAAqD,OAAA,CAAiBF,IAAKf,EAAE5E,IAAQ4E,EAAhC,CAAmCxD,MAAOqE,QAG9C,KACJ,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAhB,eAIFH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACVgB,KAAK,OACLC,MAAOE,KAAKZ,MAAMS,KAClBQ,SAAUL,KAAKT,aACfvC,KAAK,OACLsD,YAAY,oBAIhB5B,EAAAC,EAAAC,cAAA,WAAM8D,GACL1C,KAAKZ,MAAMxB,OACVc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB0B,KAAK,SACtCP,KAAKZ,MAAMxB,OAGhBc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,mCACV4B,QAAST,KAAKV,MAAMvC,aAEnB,IAJH,eAKe,MAGjB2B,EAAAC,EAAAC,cAAA,SACEC,UAAU,4BACV7B,KAAK,SACL8C,MAAM,cACNW,QAAST,KAAKoB,mBA5GDT,aAwHRC,cALS,SAAAoC,GAAA,IAAAC,EAAAD,EAAGjC,YAAH,MAA2C,CACjElB,KADsBoD,EAAkBpD,KAExCiB,UAFsBmC,EAAwBnC,YAO9C,CAAE/D,cAAasF,WJzHS,SAAA/C,GAAK,sBAAAuB,EAAAnB,OAAAwD,EAAA,EAAAxD,CAAA6B,EAAA5C,EAAAwE,KAAI,SAAA9B,EAAM+B,GAAN,IAAA9B,EAAA+B,EAAArF,EAAA,OAAAuD,EAAA5C,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3BL,EAD2B5B,OAAA4D,EAAA,EAAA5D,CAAA,GAE5BJ,GAF4BmC,EAAAE,KAAA,EAIf4B,MAAM,QAAS,CAC/BC,OAAQ,OACRC,KAAMC,KAAKC,UAAUrC,GACrBsC,QAAS,CACPC,eAAgB,sBARa,cAI3BR,EAJ2B5B,EAAAa,KAAAb,EAAAE,KAAA,EAYd0B,EAAIS,OAZU,mBAcpBzG,KAFPW,EAZ2ByD,EAAAa,OAe/Bc,EAAS,CAAEpG,KCrBY,WDqBOC,QAASe,IAfRyD,EAAAsC,OAAA,SAiB1B/F,GAjB0B,wBAAAyD,EAAAgB,SAAApB,MAAJ,gBAAA2C,GAAA,OAAAnD,EAAAoD,MAAAjE,KAAAkE,YAAA,KIuHhBtD,CAGbO,WCzDaP,cACb,KACA,CAAEuD,aChEwB,SAACC,EAAQC,GACnC,MAAO,CACLrH,KLTyB,gBKUzBC,QAAS,CAAEoH,cAAaD,aD2DbxD,CArES,SAAAtB,GAAS,IAE7BgF,EAOEhF,EAPFgF,kBACAlH,EAMEkC,EANFlC,SACAgF,EAKE9C,EALF8C,QACA7E,EAIE+B,EAJF/B,eACAD,EAGEgC,EAHFhC,QACI+G,EAEF/E,EAFFpC,GACAqH,EACEjF,EADFiF,WAGIC,EAAmB,SAAA7F,GACvB,OAAI2F,EAGE3F,IAAMpB,EAED,+DACEoB,IAAM4F,GAAc5F,IAAMpB,EAE5B,8DAGA,yCAKP,0CACCgH,IAAe5F,EAAI,2BAA6B,KASvD,OACED,EAAAC,EAAAC,cAAA,WAIEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAezB,GAC7BsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZvB,EACCoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZ,IACDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYI,IAAK3B,EAAS4B,IAAI,UAAW,KAExD,KACJR,EAAAC,EAAAC,cAAA,MACEC,UAAW,0BAA4BvB,EAAU,QAAU,WAE1D8E,EAAQH,IAAI,SAACtD,EAAGgE,GAAJ,OACXjE,EAAAC,EAAAC,cAAA,MACE6B,QAAS,SAAAjB,GAAC,OAtBN,SAAAA,GACdF,EAAM6E,aAAa3E,EAAEI,OAAO6E,UAAWJ,GAqBf5D,CAAQjB,IACtBqD,IAAKF,EACL9D,UAAW2F,EAAiB7F,IAE3BA,UE3DT+F,6MACJtF,MAAQ,CACNuF,MAAO,KACPC,WAAW,sFAGX5E,KAAKV,MAAMuF,QAAQ7E,KAAKV,MAAMwF,MAAMC,OAAO7H,4CAG7B+C,GAAS,IAAAC,EAAAF,KACvBA,KAAKP,SAAS,CACZ7B,MAAOqC,IAETE,WAAW,WACTD,EAAKT,SAAS,CACZ7B,MAAO,QAER,wCAOuB,IAFToC,KAAKV,MAAMwB,UAAUe,OAAO,SAAAC,GAAC,OAAKA,EAAEyC,aAEtCxC,QAGb/B,KAAKV,MAAM0F,cAEXhF,KAAKP,SAAS,CACZkF,MAAO3E,KAAKiF,eAAejF,KAAKV,MAAMwB,WACtC8D,WAAW,KAGb5E,KAAKgC,gBAAgB,sEAIVlB,GAMb,OALcA,EAAUoE,OAAO,SAACC,EAAKrD,GACnC,OAAIA,EAAEvE,iBAAmBuE,EAAEyC,aAChBY,EACGA,GACb,oCAII,IAAA/E,EAAAJ,KACDc,EACJd,KAAKV,MAAMwB,WACXd,KAAKV,MAAMwB,UAAUiB,OAAS,GAC9B/B,KAAKV,MAAMwB,UAAUmB,IAAI,SAACH,EAAGa,GAAJ,OAAUjE,EAAAC,EAAAC,cAACwG,EAAD1F,OAAAqD,OAAA,CAAiBF,IAAKF,GAAOb,MAClE,OACEpD,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACE3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMzG,UAAU,8CAA8C0G,GAAG,KAC9D,IADH,sBAEsB,MAGxB7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAemB,KAAKV,MAAMO,MACvCiB,EAEAd,KAAKZ,MAAMxB,OACVc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0B0B,KAAK,SAC3CP,KAAKZ,MAAMxB,OAGfoC,KAAKZ,MAAMwF,WACVlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B0B,KAAK,SAA/C,eAAAvB,OACkBgB,KAAKZ,MAAMuF,MAD7B,OAAA3F,OAEIgB,KAAKV,MAAMwB,UAAUiB,OAFzB,eAMFrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,oBACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAe7B,KAAK,WAGzC0B,EAAAC,EAAAC,cAAA,UACE4G,SAAUxF,KAAKZ,MAAMwF,UACrBnE,QAAS,kBAAML,EAAKgB,YACpBvC,UAAU,wCAHZ,oBAnFO4G,IAAM9E,WAuGVC,cANS,SAAAC,GAAA,IAAA6E,EAAA7E,EAAG8E,WAAH,MAAuD,CAC7E9F,KADsB6F,EAAiB7F,KAEvCiB,UAFsB4E,EAAuB5E,UAG7CkE,YAHsBU,EAAkCV,cAQxD,CAAEH,QD5GmB,SAAA3H,GAAE,sBAAA2D,EAAAnB,OAAAwD,EAAA,EAAAxD,CAAA6B,EAAA5C,EAAAwE,KAAI,SAAA9B,EAAM+B,GAAN,IAAAC,EAAArF,EAAA,OAAAuD,EAAA5C,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACX4B,MAAK,YAAAvE,OAAa9B,IADP,cACvBmG,EADuB5B,EAAAa,KAAAb,EAAAE,KAAA,EAER0B,EAAIS,OAFI,OAErB9F,EAFqByD,EAAAa,KAG3Bc,EAAS,CACPpG,KLLoB,WKMpBC,QAASe,IALgB,wBAAAyD,EAAAgB,SAAApB,MAAJ,gBAAA2C,GAAA,OAAAnD,EAAAoD,MAAAjE,KAAAkE,YAAA,IC4GZc,YD5Fc,WACzB,MAAO,CACLhI,KLfwB,kBMuGb4D,CAGb8D,0CCvGIkB,EAAe,CAAE/F,KAAM,GAAIiB,UAAW,ICLtC8E,EAAe,CACnB/F,KAAM,GACNiB,UAAW,GACXkE,aAAa,GCHAa,4BAAgB,CAC7B9E,YFMa,WAAkC,IAAjC3B,EAAiC8E,UAAAnC,OAAA,QAAA1E,IAAA6G,UAAA,GAAAA,UAAA,GAAzB0B,EAAcE,EAAW5B,UAAAnC,OAAA,EAAAmC,UAAA,QAAA7G,EAC/C,OAAQyI,EAAO9I,MACb,QACE,OAAOoC,EACT,IPZuB,WOarB,OAAOM,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,GAEP,IPXwB,eOetB,GAAyB,IAFTA,EAAM0B,UAAUe,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,QAAQC,KAEtD6E,OAAc,CAC1B,IAAIgE,EAAK,GAAA/G,OAAAU,OAAAsG,EAAA,EAAAtG,CACJN,EAAM0B,UAAUe,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,QAAQC,MADhD,CAEP4I,EAAO7I,UACPgJ,KAAK,SAACtH,EAAGuH,GAAJ,OAAUvH,EAAEd,QAAUqI,EAAErI,UAC/B,OAAO6B,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,EADL,CAEE0B,UAAWiF,IAGb,OAAO3G,EAEX,IP/B2B,kBOgCzB,IAAI2G,EAAK,GAAA/G,OAAAU,OAAAsG,EAAA,EAAAtG,CACJN,EAAM0B,UAAUe,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,QAAQC,MADhD,CAEP4I,EAAO7I,UACPgJ,KAAK,SAACtH,EAAGuH,GAAJ,OAAUvH,EAAEd,QAAUqI,EAAErI,UAC/B,OAAO6B,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,EADL,CAEE0B,UAAWiF,IAEf,IPnC2B,kBOoCzB,IAAII,EAAKzG,OAAAsG,EAAA,EAAAtG,CAAIN,EAAM0B,UAAUe,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,WAAUgJ,KACjE,SAACtH,EAAGuH,GAAJ,OAAUvH,EAAEd,QAAUqI,EAAErI,UAE1B,OAAO6B,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,EADL,CAEE0B,UAAWqF,ME5CjBR,WDIa,WAAkC,IAAjCvG,EAAiC8E,UAAAnC,OAAA,QAAA1E,IAAA6G,UAAA,GAAAA,UAAA,GAAzB0B,EAAcE,EAAW5B,UAAAnC,OAAA,EAAAmC,UAAA,QAAA7G,EAC/C,OAAQyI,EAAO9I,MACb,QACE,OAAOoC,EACT,IRRwB,eQStB,IAAIgH,EAAchH,EAAM0B,UAAUmB,IAAI,SAAAH,GAAC,OAAApC,OAAA4D,EAAA,EAAA5D,CAAA,GAClCoC,EADkC,CAErCwC,mBAAmB,MAErB,OAAO5E,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,EADL,CAEE0B,UAAWsF,IAEf,IRrBoB,WQsBlB,OAAO1G,OAAA4D,EAAA,EAAA5D,CAAA,GACFoG,EAAO7I,SAEd,IRtByB,gBQwBvB,IAAI6E,EAAI1C,EAAM0B,UAAUe,OACtB,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,QAAQoH,cAC7B,GACFvC,EAAEyC,WAAauB,EAAO7I,QAAQmH,OAC9B,IAAI2B,EAAK,GAAA/G,OAAAU,OAAAsG,EAAA,EAAAtG,CACJN,EAAM0B,UAAUe,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,KAAO4I,EAAO7I,QAAQoH,eADhD,CAEPvC,IACAmE,KAAK,SAACtH,EAAGuH,GAAJ,OAAUvH,EAAEL,MAAQ4H,EAAE5H,QAC7B,OAAOoB,OAAA4D,EAAA,EAAA5D,CAAA,GACFN,EADL,CAEE0B,UAAWiF,QE/BbM,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe1C,WAAf,EAAmBoC,YCJ5B9D,EAAUqE,cAEvB,SAASC,IACP,OACEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,0BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,8CAGAH,EAAAC,EAAAC,cAACkI,EAAD,OAKN,IAWeC,EAXH,kBACVrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAUT,MAAOA,GACf7H,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAQ1E,QAASA,GACf7D,EAAAC,EAAAC,cAACqI,EAAA,EAAD,KACEvI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjCnI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAW1C,QCvB3C2C,IAASC,OAAO5I,EAAAC,EAAAC,cAAC2I,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6d260516.chunk.js","sourcesContent":["import {\r\n  SUBMIT_QUIZ,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION\r\n} from './types';\r\nimport uuidv1 from 'uuid/v1';\r\n\r\nexport const submitQuiz = props => async dispatch => {\r\n  const quiz = {\r\n    ...props\r\n  };\r\n  const res = await fetch('/quiz', {\r\n    method: 'POST',\r\n    body: JSON.stringify(quiz),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  const data = await res.json();\r\n\r\n  if (data !== undefined) {\r\n    dispatch({ type: SUBMIT_QUIZ, payload: data });\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const addQuestion = () => {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    payload: {\r\n      id: uuidv1(),\r\n      question: undefined,\r\n      img_src: undefined,\r\n      correct_answer: undefined,\r\n      other_answers1: undefined,\r\n      other_answers2: undefined,\r\n      other_answers3: undefined,\r\n      requiredFieldsEmpty: true,\r\n      error: undefined,\r\n      created: new Date()\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateQuestion = question => {\r\n  return {\r\n    type: UPDATE_QUESTION,\r\n    payload: question\r\n  };\r\n};\r\n\r\nexport const deleteQuestion = id => {\r\n  return {\r\n    type: DELETE_QUESTION,\r\n    payload: id\r\n  };\r\n};\r\n","export const GET_QUIZ = 'GET_QUIZ';\r\nexport const SET_QUIZ = 'SET_QUIZ';\r\nexport const SUBMIT_QUIZ = 'ADD_QUIZ';\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\r\nexport const UPDATE_ANSWER = 'UPDATE_ANSWER';\r\nexport const SHOW_ANSWERS = 'SHOW_ANSWERS';\r\nexport const SEND_ANSWERS = 'SEND_ANSWERS';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\n","import React from 'react';\r\n\r\nconst QuestionPreview = data => {\r\n  const {\r\n    question = 'Missing question',\r\n    correct_answer = 'Missing Correct answer',\r\n    other_answers1 = 'Missing Other answer 1',\r\n    other_answers2 = 'Missing Other answer 2',\r\n    other_answers3 = 'Missing Other answer 3',\r\n    index,\r\n    img_src = undefined\r\n  } = data;\r\n\r\n  const textClass = dataAttr => {\r\n    if (data[dataAttr] === undefined || data[dataAttr] === '') {\r\n      return 'text-danger';\r\n    } else {\r\n      return 'text-success';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-left' style={{ fontSize: '2rem' }}>\r\n        {`#${index + 1} `} Preview\r\n      </div>\r\n      <h3 className={textClass('question')}>\r\n        {question === '' ? 'missing question' : question}\r\n      </h3>\r\n      <div className='d-flex w-100'>\r\n        {img_src ? (\r\n          <div className='w-50 mb-3 mr-3'>\r\n            {' '}\r\n            <img className='img-fluid' src={img_src} alt='fluid' />{' '}\r\n          </div>\r\n        ) : null}\r\n        <ul className={'list-group' + (img_src ? ' w-50' : ' w-100')}>\r\n          <li\r\n            className={\r\n              textClass('correct_answer') +\r\n              ' ' +\r\n              'list-group-item list-group-item-action'\r\n            }\r\n          >\r\n            {correct_answer === '' ? 'missing correct answer' : correct_answer}\r\n          </li>\r\n          <li\r\n            className={\r\n              textClass('other_answers1') +\r\n              ' ' +\r\n              'list-group-item list-group-item-action'\r\n            }\r\n          >\r\n            {other_answers1 === '' ? 'missing other answers1' : other_answers1}\r\n          </li>\r\n          <li\r\n            className={\r\n              textClass('other_answers2') +\r\n              ' ' +\r\n              'list-group-item list-group-item-action'\r\n            }\r\n          >\r\n            {other_answers2 === '' ? 'missing other answers2' : other_answers2}\r\n          </li>\r\n          <li\r\n            className={\r\n              textClass('other_answers3') +\r\n              ' ' +\r\n              'list-group-item list-group-item-action'\r\n            }\r\n          >\r\n            {other_answers3 === '' ? 'missing other answers3' : other_answers3}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPreview;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  addQuestion,\r\n  updateQuestion,\r\n  deleteQuestion\r\n} from '../actions/QuizActions';\r\nimport QuestionPreview from './QuestionPreview';\r\nimport { connect } from 'react-redux';\r\n\r\nclass QuestionBuilder extends Component {\r\n  state = {\r\n    id: this.props.id,\r\n    question: this.props.question,\r\n    img_src: this.props.img_src,\r\n    correct_answer: this.props.correct_answer,\r\n    other_answers1: this.props.other_answers1,\r\n    other_answers2: this.props.other_answers2,\r\n    other_answers3: this.props.other_answers3,\r\n    requiredFieldsEmpty: this.props.requiredFieldsEmpty,\r\n    index: this.props.index,\r\n    error: this.props.error,\r\n    created: this.props.created\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.updateQuestion(this.state);\r\n      if (this.requiredFieldsEmpty()) {\r\n        this.setState(\r\n          {\r\n            requiredFieldsEmpty: true\r\n          },\r\n          () => this.props.updateQuestion(this.state)\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            requiredFieldsEmpty: false\r\n          },\r\n          () => this.props.updateQuestion(this.state)\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  requiredFieldsEmpty() {\r\n    if (\r\n      this.state.question === undefined ||\r\n      this.state.question === '' ||\r\n      this.state.correct_answer === undefined ||\r\n      this.state.correct_answer === '' ||\r\n      this.state.other_answers1 === undefined ||\r\n      this.state.other_answers1 === '' ||\r\n      this.state.other_answers2 === undefined ||\r\n      this.state.other_answers2 === '' ||\r\n      this.state.other_answers3 === undefined ||\r\n      this.state.other_answers3 === ''\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setErrorMessage(message) {\r\n    this.setState({\r\n      error: message\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        error: null\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='form-group list-group-item'>\r\n        <div className='input-group input-group-sm mb-3'>\r\n          <div className='input-group-prepend'>\r\n            <span className='input-group-text bg-info text-white'>\r\n              Question:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='question'\r\n            value={this.state.question || ''}\r\n            onChange={this.handleChange}\r\n            placeholder='Question'\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group input-group-sm mb-3'>\r\n          <div className='input-group-prepend'>\r\n            <span className='input-group-text bg-info text-white'>\r\n              Image URL:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='img_src'\r\n            onChange={this.handleChange}\r\n            value={this.state.img_src || ''}\r\n            placeholder='Image link (Optional)'\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group input-group-sm mb-3'>\r\n          <div className='input-group-prepend'>\r\n            <span className='input-group-text bg-info text-white'>\r\n              Correct answer:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='correct_answer'\r\n            onChange={this.handleChange}\r\n            value={this.state.correct_answer || ''}\r\n            placeholder='Correct answer'\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group input-group-sm mb-3 '>\r\n          <div className='input-group-prepend'>\r\n            <span className='input-group-text bg-info text-white'>\r\n              Other answers:\r\n            </span>\r\n          </div>\r\n          <input\r\n            className='mr-2 form-control'\r\n            type='text'\r\n            name='other_answers1'\r\n            onChange={this.handleChange}\r\n            value={this.state.other_answers1 || ''}\r\n            placeholder='Other answer 1'\r\n          />\r\n          <input\r\n            className='mr-2 form-control'\r\n            type='text'\r\n            name='other_answers2'\r\n            onChange={this.handleChange}\r\n            value={this.state.other_answers2 || ''}\r\n            placeholder='Other answer 2'\r\n          />\r\n          <input\r\n            className='mr-2 form-control'\r\n            type='text'\r\n            name='other_answers3'\r\n            onChange={this.handleChange}\r\n            value={this.state.other_answers3 || ''}\r\n            placeholder='Other answer 3'\r\n          />\r\n        </div>\r\n        <div>\r\n          {this.state.error && (\r\n            <div className='alert alert-warning' role='alert'>\r\n              {this.state.error}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <QuestionPreview {...this.state} />\r\n\r\n        <button\r\n          className='btn btn-danger mt-3'\r\n          onClick={() => this.props.deleteQuestion(this.props.id)}\r\n        >\r\n          Remove Question\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ quizBuilder: { questions } }) => ({ questions });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addQuestion, updateQuestion, deleteQuestion }\r\n)(QuestionBuilder);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addQuestion, submitQuiz } from '../actions/QuizActions';\nimport QuestionBuilder from './QuestionBuilder';\nimport { history } from '../App';\nvar shuffle = require('knuth-shuffle').knuthShuffle;\n\nclass QuizForm extends Component {\n  state = {\n    name: ''\n  };\n\n  componentDidMount() {\n    //initialize first question\n    if (this.props.questions.length === 0) {\n      this.props.addQuestion();\n    }\n  }\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  setErrorMessage(message) {\n    this.setState({\n      error: message\n    });\n    setTimeout(() => {\n      this.setState({\n        error: null\n      });\n    }, 3000);\n  }\n\n  onSubmit = async e => {\n    e.preventDefault();\n    //check if all required fields for all questions are not empty\n    let incomplete = this.props.questions.filter(\n      q => q.requiredFieldsEmpty === true\n    );\n    if (incomplete.length > 0) {\n      this.setErrorMessage('Please fill out all questions');\n    } else {\n      let questions = this.props.questions.map(q => {\n        let randomOrderedAnswers = shuffle(\n          [\n            q.correct_answer,\n            q.other_answers1,\n            q.other_answers2,\n            q.other_answers3\n          ].slice(0)\n        );\n        return {\n          correct_answer: q.correct_answer,\n          created: q.created,\n          error: q.error,\n          id: q.id,\n          img_src: q.img_src,\n          index: q.index,\n          answers: randomOrderedAnswers,\n          question: q.question\n        };\n      });\n      let quiz = {\n        questions,\n        name: this.state.name\n      };\n      const id = await this.props.submitQuiz(quiz);\n      history.push(`/quiz/${id}`);\n    }\n  };\n  render() {\n    let content = this.props.questions\n      ? this.props.questions.map((q, i) => (\n          <React.Fragment key={i}>\n            <QuestionBuilder key={q.id} {...q} index={i} />\n          </React.Fragment>\n        ))\n      : null;\n    return (\n      <div>\n        <div className='input-group input-group-lg mb-3'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text bg-info text-white'>\n              Quiz Name:\n            </span>\n          </div>\n          <input\n            className='form-control'\n            name='name'\n            value={this.state.name}\n            onChange={this.handleChange}\n            type='text'\n            placeholder='Name your quiz'\n          />\n        </div>\n\n        <div>{content}</div>\n        {this.state.error && (\n          <div className='alert alert-danger' role='alert'>\n            {this.state.error}\n          </div>\n        )}\n        <div className='btn-group d-flex justify-content-center'>\n          <button\n            className='btn btn-success btn-sm btn-block'\n            onClick={this.props.addQuestion}\n          >\n            {' '}\n            Add question{' '}\n          </button>\n        </div>\n        <input\n          className='btn btn-primary btn-block'\n          type='submit'\n          value='Create Quiz'\n          onClick={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ quizBuilder: { name, questions } }) => ({\n  name,\n  questions\n});\n\nexport default connect(\n  mapStateToProps,\n  { addQuestion, submitQuiz }\n)(QuizForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateAnswer } from '../actions/answerQuizActions';\n\nconst QuestionDisplay = props => {\n  const {\n    showCorrectAnswer,\n    question,\n    answers,\n    correct_answer,\n    img_src,\n    id: question_id,\n    userAnswer\n  } = props;\n\n  const answerClassNames = a => {\n    if (showCorrectAnswer) {\n      //showCorrectAnswer ==true\n      //after quiz is submited\n      if (a === correct_answer) {\n        //bg-success if correct answer\n        return 'list-group-item list-group-item-action text-white bg-success';\n      } else if (a === userAnswer && a !== correct_answer) {\n        //bg-danger if user selected answer is not correct\n        return 'list-group-item list-group-item-action text-white bg-danger';\n      } else {\n        //otherwise return normal style\n        return 'list-group-item list-group-item-action';\n      }\n    } else {\n      //Before quiz is submited\n      return (\n        'list-group-item list-group-item-action' +\n        (userAnswer === a ? ' text-white bg-secondary' : '')\n      );\n    }\n  };\n\n  const onClick = e => {\n    props.updateAnswer(e.target.innerHTML, question_id);\n  };\n\n  return (\n    <div>\n      {/* <span className='float-left text-secondary' style={{ fontSize: '2rem' }}>\n        {`#${index + 1} `}{' '}\n      </span> */}\n      <h3 className='text-center'>{question}</h3>\n      <div className='d-flex'>\n        {img_src ? (\n          <div className='w-50 mb-3 mr-3'>\n            {' '}\n            <img className='img-fluid' src={img_src} alt='fluid' />{' '}\n          </div>\n        ) : null}\n        <ul\n          className={'list-group text-center' + (img_src ? ' w-50' : ' w-100')}\n        >\n          {answers.map((a, i) => (\n            <li\n              onClick={e => onClick(e, question_id)}\n              key={i}\n              className={answerClassNames(a)}\n            >\n              {a}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { updateAnswer }\n)(QuestionDisplay);\n","import { SET_QUIZ, UPDATE_ANSWER, SHOW_ANSWERS, SEND_ANSWERS } from './types';\r\n\r\nexport const setQuiz = id => async dispatch => {\r\n  let res = await fetch(`/getquiz/${id}`);\r\n  const data = await res.json();\r\n  dispatch({\r\n    type: SET_QUIZ,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const updateAnswer = (answer, question_id) => {\r\n  return {\r\n    type: UPDATE_ANSWER,\r\n    payload: { question_id, answer }\r\n  };\r\n};\r\n\r\nexport const showAnswers = () => {\r\n  return {\r\n    type: SHOW_ANSWERS\r\n  };\r\n};\r\nexport const sendAnswers = () => {\r\n  return {\r\n    type: SEND_ANSWERS\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setQuiz, showAnswers } from '../actions/answerQuizActions';\r\nimport { Link } from 'react-router-dom';\r\nimport QuestionDisplay from './QuestionDisplay';\r\nclass Quiz extends React.Component {\r\n  state = {\r\n    score: null,\r\n    submitted: false\r\n  };\r\n  componentDidMount() {\r\n    this.props.setQuiz(this.props.match.params.id);\r\n  }\r\n\r\n  setErrorMessage(message) {\r\n    this.setState({\r\n      error: message\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        error: null\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  onSubmit() {\r\n    //check if all questions have been amswered\r\n    let unanswered = this.props.questions.filter(q => !q.userAnswer);\r\n\r\n    if (unanswered.length === 0) {\r\n      //all questions answered\r\n      //show correct answers\r\n      this.props.showAnswers();\r\n      //set score\r\n      this.setState({\r\n        score: this.calculateScore(this.props.questions),\r\n        submitted: true\r\n      });\r\n    } else {\r\n      this.setErrorMessage('Please answer all questions');\r\n    }\r\n  }\r\n\r\n  calculateScore(questions) {\r\n    const score = questions.reduce((acc, q) => {\r\n      if (q.correct_answer === q.userAnswer) {\r\n        return ++acc;\r\n      } else return acc;\r\n    }, 0);\r\n    return score;\r\n  }\r\n\r\n  render() {\r\n    const questions =\r\n      this.props.questions &&\r\n      this.props.questions.length > 0 &&\r\n      this.props.questions.map((q, i) => <QuestionDisplay key={i} {...q} />);\r\n    return (\r\n      <Fragment>\r\n        <div>\r\n          <Link className=' p-3 ml-3 mt-1 btn btn-primary btn-floating' to='/'>\r\n            {' '}\r\n            Build Your Own Quiz{' '}\r\n          </Link>\r\n        </div>\r\n        <div className='container'>\r\n          <h1 className='text-center'>{this.props.name}</h1>\r\n          {questions}\r\n\r\n          {this.state.error && (\r\n            <div className='alert alert-danger mt-3' role='alert'>\r\n              {this.state.error}\r\n            </div>\r\n          )}\r\n          {this.state.submitted && (\r\n            <div className='alert alert-success mt-3' role='alert'>\r\n              {`You scored  ${this.state.score} / ${\r\n                this.props.questions.length\r\n              } questions`}\r\n            </div>\r\n          )}\r\n          <div className='d-flex'>\r\n            <div>\r\n              <div className='input-group-prepend'>\r\n                <span className='input-group-text'>Enter your name:</span>\r\n                <input className='form-control' type='text' />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={this.state.submitted}\r\n              onClick={() => this.onSubmit()}\r\n              className='btn btn-success mx-auto p-3 m-3 w-25'\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ answerQuiz: { name, questions, showAnswers } }) => ({\r\n  name,\r\n  questions,\r\n  showAnswers\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setQuiz, showAnswers }\r\n)(Quiz);\r\n","import {\r\n  SUBMIT_QUIZ,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION\r\n} from '../actions/types';\r\n\r\n//Initial state for quiz\r\nconst initialState = { name: '', questions: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n    case SUBMIT_QUIZ:\r\n      return {\r\n        ...state\r\n      };\r\n    case ADD_QUESTION:\r\n      //check if question id is already in array\r\n      let isInArray = state.questions.filter(q => q.id === action.payload.id);\r\n\r\n      if (isInArray.length === 0) {\r\n        let qs = [\r\n          ...state.questions.filter(q => q.id !== action.payload.id),\r\n          action.payload\r\n        ].sort((a, b) => a.created > b.created);\r\n        return {\r\n          ...state,\r\n          questions: qs\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    case UPDATE_QUESTION:\r\n      let qs = [\r\n        ...state.questions.filter(q => q.id !== action.payload.id),\r\n        action.payload\r\n      ].sort((a, b) => a.created - b.created);\r\n      return {\r\n        ...state,\r\n        questions: qs\r\n      };\r\n    case DELETE_QUESTION:\r\n      let Qs = [...state.questions.filter(q => q.id !== action.payload)].sort(\r\n        (a, b) => a.created - b.created\r\n      );\r\n      return {\r\n        ...state,\r\n        questions: Qs\r\n      };\r\n  }\r\n};\r\n","import { SET_QUIZ, UPDATE_ANSWER, SHOW_ANSWERS } from '../actions/types';\r\n\r\n//Initial state for quiz\r\nconst initialState = {\r\n  name: '',\r\n  questions: [],\r\n  showAnswers: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n    case SHOW_ANSWERS:\r\n      let withAnswers = state.questions.map(q => ({\r\n        ...q,\r\n        showCorrectAnswer: true\r\n      }));\r\n      return {\r\n        ...state,\r\n        questions: withAnswers\r\n      };\r\n    case SET_QUIZ:\r\n      return {\r\n        ...action.payload\r\n      };\r\n    case UPDATE_ANSWER:\r\n      //find correct question\r\n      let q = state.questions.filter(\r\n        q => q.id === action.payload.question_id\r\n      )[0];\r\n      q.userAnswer = action.payload.answer;\r\n      let qs = [\r\n        ...state.questions.filter(q => q.id !== action.payload.question_id),\r\n        q\r\n      ].sort((a, b) => a.index - b.index);\r\n      return {\r\n        ...state,\r\n        questions: qs\r\n      };\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport quizReducer from './quizReducer';\r\nimport answerQuizReducer from './answerQuizReducer';\r\nexport default combineReducers({\r\n  quizBuilder: quizReducer,\r\n  answerQuiz: answerQuizReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport QuizForm from './components/QuizForm';\nimport Quiz from './components/Quiz';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router';\nimport store from './store';\nimport { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();\n\nfunction Home() {\n  return (\n    <div className='text-center container '>\n      <h1 className='text-center'>Welcome to QuizBuilder</h1>\n      <h2 className='text-center'>\n        Build your own quiz and share with friends\n      </h2>\n      <QuizForm />\n    </div>\n  );\n}\n\nconst App = () => (\n  <Provider store={store}>\n    <Router history={history}>\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/quiz/:id' component={Quiz} />\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}